.demo-group {
    max-inline-size: 100vw;
    padding: var(--size-3) 0 0;

    &__title {
        margin: 0 0 var(--size-2);
    }
}

.demo-surface {
    box-shadow: var(--elevation-3);
    display: grid;
    place-items: center;
    padding: var(--size-2);
}

.demo-palette {
    --columns: 13;
    background: var(--bg);
    display: grid;
    grid-template-columns: repeat(var(--columns), 1fr);
    gap: var(--size-fluid-2);
    padding: var(--size-fluid-3);

    &--flex {
        display: flex;
        flex-wrap: wrap;
        gap: var(--size-fluid-1);

        > * {
            flex: 0 0 auto;
        }
    }

    &__item {
        aspect-ratio: var(--ratio, var(--ratio-square));
        background: var(--bg);
        block-size: var(--block-size, auto);
        border: var(--border-width, 0) solid var(--color-primary-700);
        border-radius: var(--radius, 0);
        box-shadow: var(--elevation, none);
        display: grid;
        inline-size: var(--inline-size, auto);
        place-items: center;

        &.-round {
            border-radius: var(--radius-round);
        }

        &.-border {
            border: 1px solid var(--color-neutral-0);
        }

        &.-bump {
            border: 1px solid var(--color-neutral-50);
        }
    }

    &__label {
        color: var(--color, var(--color-neutral-1000));
        font-size: 0.75vw;
        font-weight: 700;
        text-align: center;

        &.-padded {
            background: var(--color-neutral-0);
            padding: var(--size-1);
        }
    }

    &__swatch {
        aspect-ratio: var(--ratio-square);
        background: var(--bg);
        height: 50%;
        width: 50%;
    }
}

.demo-heading {
    color: var(--section-color-heading);
    max-inline-size: var(--inline-size, var(--size-header-3));
    text-wrap: balance;
}

.demo-text {
    color: var(--section-color-text);
    max-inline-size: var(--inline-size, var(--size-content-4));
    margin-block-end: var(--size-2);
}

.demo-columns {
    --column-min: var(--size-fluid-5);
    display: grid;
    gap: var(--size-fluid-2);
    grid-template-columns: repeat(auto-fill, minmax(var(--column-min), 1fr));
}

.demo-motion {
    --play-state: paused;
    background: var(--color-primary-50);
    block-size: var(--size-fluid-5);
    inline-size: var(--size-fluid-10);
    position: relative;

    &:hover {
        --play-state: running;
    }

    @keyframes bounce {
        0% {
            transform: translateX(0);
        }

        100% {
            transform: translateX(calc(var(--size-fluid-10) - var(--size-fluid-5)));
        }
    }

    span {
        animation: bounce var(--duration, var(--duration-slow)) var(--play-state, paused) infinite var(--easing, linear) alternate;
        aspect-ratio: var(--ratio-square);
        background: var(--color-primary-700);
        block-size: var(--size-fluid-5);
        display: block;
        inset-block-start: 0;
        inset-inline-start: 0;
        position: absolute;
    }
}

.bg-chess {
    --size: 1.5rem;
    --half: calc(var(--size) / 2);
    --opacity: 0.8;
    background-color: var(--color-neutral-50);
    background-image:
        repeating-linear-gradient(45deg, var(--color-neutral-0) 25%, transparent 25%, transparent 75%, var(--color-neutral-0) 75%, var(--color-neutral-0)),
        repeating-linear-gradient(45deg, var(--color-neutral-0) 25%, transparent 25%, transparent 75%, var(--color-neutral-0) 75%, var(--color-neutral-0)),
        linear-gradient(45deg, hsl(var(--color-primary-700-hsl) / var(--opacity)), hsl(var(--color-primary-200-hsl) / var(--opacity)), hsl(var(--color-primary-700-hsl) / var(--opacity)));
    background-position: 0 0, var(--half) var(--half), 0 0;
    background-repeat: repeat, repeat, no-repeat;
    background-size: var(--size) var(--size), var(--size) var(--size), 100% 100%;
    border: 2px solid var(--color-primary-100);
}
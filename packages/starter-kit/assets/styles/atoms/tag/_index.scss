@use '@assets/styles/abstracts/mixins/media-queries' as *;

// For use on checkboxes, radio switches, buttons, anchors or spans.
// when used with checkboxs and radio the markup should be the following:
// <label class="tag" for="checkbox-id">
//    Checkbox Label
//    <input type="checkbox" id="checkbox-id" class="tag__input" />
// </label>


tag,
tag-input,
.tag,
.tag-input {
    --_tag-border-radius:                           var(--tag-border-radius, var(--radius-2));
    --_tag-border-width:                            var(--tag-border-width, var(--border-width-1));
    --_tag-color-background-active:                 var(--tag-color-background-active, var(--color-action-700));
    --_tag-color-background-hover:                  var(--tag-color-background-hover, transparent);
    --_tag-color-background-inactive:               var(--tag-color-background-inactive, transparent);
    --_tag-color-border-active:                     var(--tag-color-border-active, var(--color-action-700));
    --_tag-color-border-hover:                      var(--tag-color-border-hover, var(--color-action-700));
    --_tag-color-border-inactive:                   var(--tag-color-border-inactive, var(--color-action-600));
    --_tag-color-highlight:                         var(--tag-color-highlight, hsl( var(--section-color-text-neutral-hsl) / 10% ));
    --_tag-color-text-active:                       var(--tag-color-text-active, var(--color-neutral-0));
    --_tag-color-text-hover:                        var(--tag-color-text-hover, var(--color-action-700));
    --_tag-color-text-inactive:                     var(--tag-color-text-inactive, var(--color-action-700));
    --_tag-flex-direction:                          var(--tag-flex-direction, row);
    --_tag-font-family:                             var(--tag-font-family, var(--font-sans));
    --_tag-font-size:                               var(--tag-font-size, 0.75rem);
    --_tag-font-weight:                             var(--tag-font-weight, var(--font-weight-regular));
    --_tag-gap:                                     var(--tag-gap, var(--size-0));
    --_tag-line-height:                             var(--tag-line-height, var(--leading-normal));
    --_tag-padding-x:                               var(--tag-padding-x, var(--size-1));
    --_tag-padding-y:                               var(--tag-padding-y, var(--size-0));
    --_tag-size-highlight:                          0;
    --_tag-transition:                              var(--tag-transition, var(--transition));

    --_tag-color-background:                        var(--_tag-color-background-inactive);
    --_tag-color-border:                            var(--_tag-color-border-inactive);
    --_tag-color-text:                              var(--_tag-color-text-inactive);

    &:where(tag, span, [tag-active]){
        --_tag-color-background:                    var(--_tag-color-background-active);
        --_tag-color-border:                        var(--_tag-color-border-active);
        --_tag-color-text:                          var(--_tag-color-text-active);
    }
}

tag,
.tag {
    align-items: center;
    background: var(--_tag-color-background);
    border: var(--_tag-border-width) solid var(--_tag-color-border);
    border-radius: var(--_tag-border-radius);
    color: var(--_tag-color-text);
    display: inline-flex;
    flex-direction: var(--_tag-flex-direction);
    font-family: var(--_tag-font-family);
    font-size: var(--_tag-font-size);
    font-weight: var(--_tag-font-weight);
    gap: var(--_tag-gap);
    justify-content: space-between;
    line-height: var(--_tag-line-height);
    padding: var(--_tag-padding-y) var(--_tag-padding-x);

    > * {
        flex-shrink: 0;
    }

    svg,
    .tag__icon {
        aspect-ratio: var(--tag-icon-ratio, 1);
        block-size: var(--tag-icon-block-size, var(--_tag-font-size));
        color: var(--_tag-color-text);
    }
}

// may not need this.
// absolute position input over wrapper.
// but how does the wrapper know when input is checked.
tag-input,
.tag-input {
    position: relative;

    label {
        
    }

    input {

    }

    svg,
    .tag-input__icon {

    }
}
@use '@assets/styles/abstracts/mixins/links' as *;
@use '@assets/styles/abstracts/mixins/typography' as *;

@mixin rich-text() {
    --_list-padding-inline-start:                   var(--list-padding-inline-start, var(--size-fluid-4));
    --_text-max-inline-size:                        var(--text-max-inline-size, var(--size-content-4));
    --_text-color:                                  var(--text-color, var(--section-color-text, var(--color-neutral-1000)));
    --_text-font-family:                            var(--text-font-family, var(--font-sans));
    --_text-font-size:                              var(--text-font-size, var(--paragraph-size-md));
    --_text-font-weight:                            var(--text-font-weight, var(--font-weight-regular));
    --_text-line-height:                            var(--text-line-height, var(--leading-paragraph));

    color: var(--_text-color);
    font-family: var(--_text-font-family);
    font-size: var(--_text-font-size);
    font-weight: var(--_text-font-weight);
    line-height: var(--_text-line-height);
    max-inline-size: var(--_text-max-inline-size);
    overflow-wrap: break-word;
    word-break: break-word;

    :where(p):where {
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
        line-height: inherit;
    }

    :where(a) {
        @include inline-link();
    }

    :where(hr) {
        border: none;
        border-block-start: 2px solid var(--hr-color, var(--color-primary-200));
        margin-block: var(--size-4);
    }

    :where(ul, ol) {
        --_list-row-gap:            var(--list-row-gap, var(--size-1));

        display: grid;
        gap: var(--_list-row-gap);
        list-style: none;
        padding-inline-start: var(--_list-padding-inline-start);

        &[svg-marker] li,
        li[svg-marker] {
            --icon-fill-color: var(--color-primary-500);
            --list-marker-block-size: 1.2em;
            --list-marker-inline-size: 1.2em;
            &::before {
                content: none;
            }

            svg {
                block-size: var(--_list-marker-block-size);
                object-fit: contain;
                inline-size: var(--_list-marker-inline-size);
                margin-block-start: var(--_list-margin-block-start);
            }
        }

        :where(li) {
            --_list-margin-block-start: calc( ( var(--_text-font-size) * var(--_text-line-height) - var(--_list-marker-block-size) ) / 2 );
            display: grid;
            gap: var(--size-1);
            grid-template-columns: var(--_list-marker-inline-size) auto;
            position: relative;

            &::marker {
                font-size: 0; // Safari doesn't recognize display: none;
            }

            > :where(ul, ol) {
                grid-column-start: 2;
                padding-inline-start: 0;
            }

        }
    }

    :where(ul) {
        &[icon-marker] li,
        li[icon-marker] {
            --list-marker-block-size: 1.2em;
            --list-marker-inline-size: 1.2em;
            --list-marker-color-background: transparent;

            &::before {
                background-image: var(--list-background-image);
                background-position: center;
                background-repeat: no-repeat;
                background-size: contain;
            }
        }

        &[icon-marker='check'] li,
        li[icon-marker='check'] {
            --list-background-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='24' height='24' rx='12' fill='%23E6CCFF'/%3E%3Cpath d='M6 12L10 16L18 8' stroke='%238000FF' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E%0A");
        }

        &[icon-marker='positive'] li,
        li[icon-marker='positive'] {
            --list-background-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='24' height='24' rx='12' fill='%2328C642'/%3E%3Cpath d='M6 12L10 16L18 8' stroke='%23EBFFEE' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E ");
        }

        &[icon-marker='negative'] li,
        li[icon-marker='negative'] {
            --list-background-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='24' height='24' rx='12' fill='%23E53411'/%3E%3Cpath d='M6 12H18' stroke='%23FFF3F1' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E ");
        }

        :where(li) {
            --_list-marker-block-size:              var(--list-marker-block-size, 0.5em);
            --_list-marker-inline-size:             var(--list-marker-inline-size, 1em);
            --_list-marker-color-background:        var(--list-marker-color-background, var(--color-primary-500));

            &::before {
                background: var(--_list-marker-color-background);
                block-size: var(--_list-marker-block-size);
                border-radius: 1em;
                content: var( --list-marker-content, '');
                inline-size: var(--_list-marker-inline-size);
                margin-block-start: var(--_list-margin-block-start);
            }

            li {
                --list-marker-color-background: var(--color-primary-200);
                --list-marker-block-size: 0.25em;
            }
        }

    }

    :where(ol) {
        counter-reset: list-counter;

        :where(li) {
            --_list-marker-block-size:              var(--list-marker-block-size, 2.5em);
            --_list-marker-color-background:        var(--list-marker-color-background, var(--color-primary-500));
            // ADD SECTION COLORS AS DEFAULTS
            --_list-marker-color-text:              var(--list-marker-color-text, var(--color-neutral-0));
            --_list-marker-font-size:               var(--list-marker-font-size, 0.9em);
            --_list-marker-inline-size:             var(--list-marker-inline-size, 2.5em);
            counter-increment: list-counter;

            &::before {
                background: var(--_list-marker-color-background);
                block-size: var(--_list-marker-block-size);
                border-radius: var(--radius-round);
                color: var(--_list-marker-color-text);
                content: var( --list-marker-content, counters(list-counter, "."));
                display: grid;
                font-size: var(--_list-marker-font-size);
                font-weight: var(--font-weight-bold);
                inline-size: var(--_list-marker-inline-size);
                margin-block-start: var(--_list-margin-block-start);
                place-items: center;
            }

            li {
                --list-marker-color-background: var(--color-primary-200);
            }
        }
    }

    :where(p, ul, ol, dl, blockquote, pre) {
        + * {
            margin-block-start: var(--size-3);
        }
    }

    //ul

    //ol

    //pre

    //code

    //blockquote

    //hr


}